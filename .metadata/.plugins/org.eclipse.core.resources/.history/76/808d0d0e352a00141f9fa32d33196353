package UI.Desktop;

import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;

import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.WindowConstants;

import Business.LavarropasLogic;
import Business.TelevisionLogic;
import Entities.Lavarropas;
import Entities.Television;

public class formMain {
	
	public enum TipoOperacion{alta,modificacion};
	
	private TableWithModel frame;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					formMain window = new formMain();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public formMain() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new TableWithModel(generateTableInput());
		frame.setBounds(100, 100, 691, 410);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		JMenuBar menuBar = new JMenuBar();
		frame.setJMenuBar(menuBar);
		
		JMenu mnArchivo = new JMenu("Archivo");
		menuBar.add(mnArchivo);
		
		JMenuItem mntmNuevo = new JMenuItem("Nuevo");
		mntmNuevo.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		Nuevo();
        	}
        });
		mnArchivo.add(mntmNuevo);
		
		JMenu mnAyuda = new JMenu("Ayuda");
		menuBar.add(mnAyuda);
	}
	
	private ArrayList<Object[]> generateTableInput(){
		TelevisionLogic televisiones = new TelevisionLogic();
		LavarropasLogic lavarropas = new LavarropasLogic();
		
		ArrayList<Object[]> data = new ArrayList<Object[]>();
		for(Lavarropas la : lavarropas.getAll()){
			Object[] obj = convertLavarropasToObject(la);
			data.add(obj);
		}		
		for(Television te : televisiones.getAll()){
			Object[] obj = convertTelevisionToObject(te);
			data.add(obj);
		}
		
		return data;
	}
	
	private Object[] convertTelevisionToObject(Television te){
		Object[] obj = { false, te.getId(), te.getDescripcion(), te.getColor(),
				 te.getConsumoEnergetico(), te.getPeso(),
				 te.getPrecio_base(), null, te.getResolucion(), te.tieneSinTDT(), new TelevisionLogic().precioFinal(te.getId())};
		return obj;
	}
	
	private Object[] convertLavarropasToObject(Lavarropas la){
		Object[] obj = { false, la.getId(), la.getDescripcion(), la.getColor(),
				 la.getConsumoEnergetico(), la.getPeso(),
				 la.getPrecio_base(), la.getCarga(), null, null,new LavarropasLogic().precioFinal(la.getId())};
		return obj;
	}
	
	private void Nuevo(){
		formElectrodomestico form = new formElectrodomestico();
		form.setTipoOperacion(formMain.TipoOperacion.alta);
		form.setVisible(true);
		form.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent ev) {                
                
        		if(form.getResultado() == formElectrodomestico.resultado.Completado){
        			UpdateTable();
        		}
        		form.dispose();
            }
        });
	}
	
	private void UpdateTable(){
		frame.UpdateTable(generateTableInput());
	}

}
